{"version":3,"sources":["components/Blurb/index.js","components/ContactMe/index.js","components/Hero/index.js","components/Layout/index.js","components/Nameplate/index.js","components/Navigator/index.js","components/PortfolioCard/index.js","components/Skillset/index.js","components/Title/index.js","components/Header/index.js","pages/About.js","pages/Portfolio.js","pages/Contact.js","pages/NoMatch.js","App.js","serviceWorker.js","index.js"],"names":["Blurb","props","className","style","title","Row","Col","src","right","md","alt","children","ContactMe","href","email","linkedin","github","Hero","opacity","Math","min","currentScrollHeight","Jumbotron","fluid","subtitle","Layout","Container","CardLayout","Nameplate","Navigator","Navbar","expand","sticky","bg","variant","Brand","brand","Toggle","aria-controls","Collapse","id","Nav","Item","Link","PortfolioCard","Card","Img","image","Body","Title","name","Subtitle","techs","Text","description","Footer","repoLink","appLink","Skillset","Header","About","bio","map","skill","index","length","Component","Portfolio","state","projects","console","log","this","card","key","Contact","contactMe","NoMatch","App","window","onscroll","newScrollHeight","ceil","scrollY","setState","basename","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8wGAIaA,EAAQ,SAAAC,GACnB,OACE,kBAAC,EAAD,CAAQC,UAAS,UAAKD,EAAMC,UAAX,UAA8BC,MAAOF,EAAME,OACzDF,EAAMG,MACL,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,4BACGL,EAAMG,SAKb,kBAACC,EAAA,EAAD,CAAKH,UAAU,WAEjB,kBAACG,EAAA,EAAD,KACGJ,EAAMM,MAAQN,EAAMO,MACnB,kBAACF,EAAA,EAAD,CAAKG,GAAI,GACL,yBAAKF,IAAKN,EAAMM,IAAKG,IAAKT,EAAMS,OAGpC,kBAACJ,EAAA,EAAD,CAAKJ,UAAU,WAEjB,kBAACI,EAAA,EAAD,CAAKG,IAAE,GACL,2BAAIR,EAAMU,WAEXV,EAAMM,KAAON,EAAMO,MAClB,kBAACF,EAAA,EAAD,CAAKG,GAAI,GACL,yBAAKF,IAAKN,EAAMM,IAAKG,IAAKT,EAAMS,OAGpC,kBAACJ,EAAA,EAAD,CAAKJ,UAAU,cC7BZU,EAAY,SAAAX,GACvB,OACE,kBAAC,EAAD,CAAQC,UAAS,UAAKD,EAAMC,UAAX,eAAmCC,MAAOF,EAAME,OAC/D,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,4BAAI,uCACJ,uBAAGO,KAAI,iBAAYZ,EAAMa,QAAUb,EAAMa,QAO3C,kBAACR,EAAA,EAAD,KACE,yBAAKJ,UAAU,cACb,uBAAGW,KAAMZ,EAAMc,UACb,uBAAGb,UAAU,cAEf,uBAAGW,KAAMZ,EAAMe,QACb,uBAAGd,UAAU,iB,QCpBde,EAAO,SAAAhB,GAClB,IAAMiB,EAAUC,KAAKC,IAAI,GAAKnB,EAAMoB,oBAAuB,GAC3D,OACE,kBAACC,EAAA,EAAD,CAAWC,OAAK,EAACrB,UAAU,QACvB,kBAAC,EAAD,CACEC,MAAO,CAAEe,WACThB,UAAU,cACVsB,SAAUvB,EAAMuB,UAEjBvB,EAAMU,Y,QCVFc,EAAS,SAAAxB,GACpB,OACE,kBAACyB,EAAA,EAAD,CAAWxB,UAAS,UAAKD,EAAMC,UAAX,WAA+BC,MAAOF,EAAME,OAC7DF,EAAMU,WAKAgB,EAAa,SAAA1B,GACxB,OACE,kBAACyB,EAAA,EAAD,CAAWxB,UAAS,UAAKD,EAAMC,UAAX,iBACjBD,EAAMU,WCVAiB,EAAY,SAAA3B,GACvB,OACE,kBAAC,EAAD,CAAQC,UAAS,UAAKD,EAAMC,UAAX,cAAkCC,MAAOF,EAAME,OAC9D,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,4BAAKL,EAAMU,YAGf,kBAACN,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,2BAAG,4BAAKL,EAAMuB,e,gBCVXK,EAAY,SAAA5B,GACvB,IAAMiB,EAAUC,KAAKC,IAAInB,EAAMoB,oBAAsB,IAAM,GAC3D,OACE,kBAACS,EAAA,EAAD,CACEC,OAAO,KACPC,OAAO,MACPC,GAAG,OACHC,QAAQ,OACRhC,UAAU,aAEZ,kBAAC,EAAD,KACE,kBAAC4B,EAAA,EAAOK,MAAR,CAAcjC,UAAU,QAAQC,MAAO,CAAEe,WAAWL,KAAK,KACtDZ,EAAMmC,OAET,kBAACN,EAAA,EAAOO,OAAR,CAAeC,gBAAc,qBAC7B,kBAACR,EAAA,EAAOS,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAKvC,UAAU,OACb,kBAACuC,EAAA,EAAIC,KAAL,KACE,kBAACD,EAAA,EAAIE,KAAL,CAAU9B,KAAK,KAAf,UAEF,kBAAC4B,EAAA,EAAIC,KAAL,KACE,kBAACD,EAAA,EAAIE,KAAL,CAAU9B,KAAK,cAAf,cAEF,kBAAC4B,EAAA,EAAIC,KAAL,KACE,kBAACD,EAAA,EAAIE,KAAL,CAAU9B,KAAK,YAAf,iB,QCzBC+B,EAAgB,SAAA3C,GAC3B,OACE,kBAAC4C,EAAA,EAAD,CAAM3C,UAAU,kBACd,kBAAC2C,EAAA,EAAKC,IAAN,CAAUZ,QAAQ,MAAM3B,IAAKN,EAAM8C,QACnC,kBAACF,EAAA,EAAKG,KAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,CAAY/C,UAAU,cAAcD,EAAMiD,MAC1C,kBAACL,EAAA,EAAKM,SAAN,CAAejD,UAAU,iBAAiBD,EAAMmD,OAChD,kBAACP,EAAA,EAAKQ,KAAN,KACGpD,EAAMqD,cAGX,kBAACT,EAAA,EAAKU,OAAN,KACGtD,EAAMuD,SACP,kBAACX,EAAA,EAAKF,KAAN,CAAW9B,KAAMZ,EAAMuD,UAAvB,gBAEA,kBAACX,EAAA,EAAKF,KAAN,MAEC1C,EAAMwD,QACP,kBAACZ,EAAA,EAAKF,KAAN,CAAW9B,KAAMZ,EAAMwD,SAAvB,eAEA,kBAACZ,EAAA,EAAKF,KAAN,SCnBKe,EAAW,SAAAzD,GACtB,OACE,kBAAC,EAAD,CAAQC,UAAS,UAAKD,EAAMC,UAAX,aAAiCC,MAAOF,EAAME,OAC7D,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,2BAAG,4BAAKL,EAAMU,eCLXsC,EAAQ,SAAAhD,GACnB,OACE,kBAAC,EAAD,CAAQC,UAAS,UAAKD,EAAMC,UAAX,UAA8BC,MAAOF,EAAME,OAC1D,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,4BAAI,gCAASL,EAAMU,aAGvB,kBAACN,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,2BAAIL,EAAMuB,cCXPmC,EAAS,SAAA1D,GACpB,OACE,oCACE,kBAAC,EAAD,CACEoB,oBAAqBpB,EAAMoB,oBAC3BG,SAAUvB,EAAMuB,UAEfvB,EAAMU,UAET,kBAAC,EAAD,CACEU,oBAAqBpB,EAAMoB,oBAC3Be,MAAOnC,EAAMmC,U,QCWNwB,E,iLAlBX,OACE,oCACE,kBAAC,EAAD,CAAOpC,SAAS,wBAAhB,SACA,kBAAC,EAAD,CAAOjB,IAAKsD,KAAeA,KAC3B,kBAAC,EAAD,KACGA,IAAWC,KACV,SAACC,EAAOC,GAAR,OACE,8BACGA,IAAWH,IAAWI,OAAS,EAA/B,UAAuCF,EAAvC,gBAAsDA,a,GAVnDG,a,QCgCLC,E,YA9Bb,aAAe,IAAD,8BACZ,+CACKC,MAAQ,CACXC,SAAUA,KAEZC,QAAQC,IAAI,EAAKH,OALL,E,sEASZ,OACE,oCACE,kBAAC,EAAD,CAAO5C,SAAS,yBAAhB,aACA,kBAAC,EAAD,KACGgD,KAAKJ,MAAMC,SAASP,KAAI,SAAAW,GAAI,OAC3B,kBAAC,EAAD,CACEC,IAAKD,EAAKC,IACVxB,KAAMuB,EAAKvB,KACXI,YAAamB,EAAKnB,YAClBF,MAAOqB,EAAKrB,MACZL,MAAO0B,EAAK1B,MACZS,SAAUiB,EAAKjB,SACfC,QAASgB,EAAKhB,mB,GAtBJS,a,QCcTS,E,iLAbX,OACE,oCACE,kBAAC,EAAD,CAAOnD,SAAS,uBAAhB,WACA,kBAAC,EAAD,CACEV,MAAO8D,IACP7D,SAAU6D,IACV5D,OAAQ4D,W,GARIV,aCcPW,E,iLAbX,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAOrD,SAAS,kCAAhB,WACA,kBAACnB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,uBAAGJ,UAAU,qBAAb,0B,GAPUgE,a,QCiDPY,E,YAtCb,aAAe,IAAD,8BACZ,+CACKV,MAAQ,CACX/C,oBAAqB,GAHX,E,iFAOQ,IAAD,OACnB0D,OAAOC,SAAU,WACf,IAAMC,EAAmD,GAAjC9D,KAAK+D,KAAKH,OAAOI,QAAU,IAC/C,EAAKf,MAAM/C,sBAAwB4D,IACnC,EAAKG,SAAS,CAAC/D,oBAAqB4D,IACpCX,QAAQC,IAAIU,O,+BAMlB,OACE,kBAAC,IAAD,CAAQI,SAAS,IACf,kBAAC,EAAD,CACEhE,oBAAqBmD,KAAKJ,MAAM/C,oBAChCG,SAAU0B,IACVd,MAAOc,KAENA,KAEH,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOoC,OAAK,EAACC,KAAK,IAAIC,UAAY5B,IAClC,kBAAC,IAAD,CAAO2B,KAAK,aAAaC,UAAYrB,IACrC,kBAAC,IAAD,CAAOoB,KAAK,WAAWC,UAAYb,IACnC,kBAAC,IAAD,CAAOa,UAAYX,U,GAhCXX,aCFEuB,QACW,cAA7BV,OAAOW,SAASC,UAEe,UAA7BZ,OAAOW,SAASC,UAEhBZ,OAAOW,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.321218eb.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { Layout } from '../';\r\n\r\nexport const Blurb = props => {\r\n  return(\r\n    <Layout className={`${props.className} blurb`} style={props.style}>\r\n      {props.title ?\r\n        <Row>\r\n          <Col>\r\n            <h3>\r\n              {props.title}\r\n            </h3>\r\n          </Col>\r\n        </Row>\r\n      :\r\n        <Row className=\"d-none\" />\r\n      }\r\n      <Row>\r\n        {props.src && !props.right ? \r\n          <Col md={4}>\r\n              <img src={props.src} alt={props.alt} />\r\n          </Col>\r\n          :\r\n          <Col className=\"d-none\" />\r\n        }\r\n        <Col md>\r\n          <p>{props.children}</p>\r\n        </Col>\r\n        {props.src && props.right ? \r\n          <Col md={4}>\r\n              <img src={props.src} alt={props.alt} />\r\n          </Col>\r\n          :\r\n          <Col className=\"d-none\" />\r\n        }\r\n      </Row>\r\n    </Layout>\r\n  )\r\n}","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\n// import { Link } from 'react-router-dom';\r\nimport { Layout } from '..';\r\n\r\nexport const ContactMe = props => {\r\n  return(\r\n    <Layout className={`${props.className} contact-me`} style={props.style}>\r\n      <Row>\r\n        <Col>\r\n          <h4><em>Email:</em></h4>\r\n          <a href={`mailto:${props.email}`}>{props.email}</a>\r\n        </Col>\r\n        {/* <Col>\r\n          <Link href=\"../../assets/pdf/thomas-christ-resume.pdf\" download>\r\n            Download My Resume\r\n          </Link>\r\n        </Col> */}\r\n        <Col>\r\n          <div className=\"text-right\">\r\n            <a href={props.linkedin}>\r\n              <i className=\"linkedin\"></i>\r\n            </a>\r\n            <a href={props.github}>\r\n              <i className=\"github\"></i>\r\n            </a>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Layout>\r\n  )\r\n}","import React from 'react';\r\nimport { Jumbotron } from 'react-bootstrap';\r\nimport { Nameplate } from '../';\r\n\r\nexport const Hero = props => {\r\n  const opacity = Math.min(25 / props.currentScrollHeight  , 1)\r\n  return(\r\n    <Jumbotron fluid className=\"hero\">\r\n        <Nameplate\r\n          style={{ opacity }}\r\n          className=\"text-center\"\r\n          subtitle={props.subtitle}\r\n        >\r\n        {props.children}\r\n        </Nameplate>\r\n    </Jumbotron>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nexport const Layout = props => {\r\n  return(\r\n    <Container className={`${props.className} layout`} style={props.style}>\r\n      {props.children}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport const CardLayout = props => {\r\n  return(\r\n    <Container className={`${props.className} card-layout`}>\r\n      {props.children}\r\n    </Container>\r\n  )\r\n}","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { Layout } from '../';\r\n\r\nexport const Nameplate = props => {\r\n  return(\r\n    <Layout className={`${props.className} nameplate`} style={props.style}>\r\n      <Row>\r\n        <Col>\r\n          <h1>{props.children}</h1>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <p><em>{props.subtitle}</em></p>\r\n        </Col>\r\n      </Row>\r\n    </Layout>\r\n  )\r\n}","import React from 'react';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport { Layout } from '../'\r\n\r\nexport const Navigator = props => {\r\n  const opacity = Math.min(props.currentScrollHeight / 250 , 1)\r\n  return(\r\n    <Navbar \r\n      expand=\"md\"\r\n      sticky=\"top\"\r\n      bg=\"dark\"\r\n      variant=\"dark\"\r\n      className=\"navigator\"\r\n    >\r\n    <Layout>\r\n      <Navbar.Brand className=\"brand\" style={{ opacity }} href=\"/\">\r\n        {props.brand}\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\" >\r\n        <Nav className=\"nav\">\r\n          <Nav.Item>\r\n            <Nav.Link href=\"/\">About</Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link href=\"/portfolio\">Portfolio</Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link href=\"/contact\">Contact</Nav.Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n\r\n    </Layout>\r\n    </Navbar>\r\n  )   \r\n}\r\n","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nexport const PortfolioCard = props => {\r\n  return(\r\n    <Card className=\"portfolio-card\">\r\n      <Card.Img variant=\"top\" src={props.image} />\r\n      <Card.Body>\r\n        <Card.Title className=\"card-title\">{props.name}</Card.Title>\r\n        <Card.Subtitle className=\"card-subtitle\">{props.techs}</Card.Subtitle>\r\n        <Card.Text>\r\n          {props.description}\r\n        </Card.Text>\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        {props.repoLink ? \r\n        <Card.Link href={props.repoLink}>See the Code</Card.Link>\r\n        :\r\n        <Card.Link />\r\n        }\r\n        {props.appLink ? \r\n        <Card.Link href={props.appLink}>Try the App</Card.Link>\r\n        :\r\n        <Card.Link />\r\n        }\r\n      </Card.Footer>\r\n    </Card>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { Layout } from '../';\r\n\r\nexport const Skillset = props => {\r\n  return(\r\n    <Layout className={`${props.className} skillset`} style={props.style}>\r\n      <Row>\r\n        <Col>\r\n          <p><em>{props.children}</em></p>\r\n        </Col>\r\n      </Row>\r\n    </Layout>\r\n  )\r\n}","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { Layout } from '../';\r\n\r\nexport const Title = props => {\r\n  return(\r\n    <Layout className={`${props.className} title`} style={props.style}>\r\n      <Row>\r\n        <Col>\r\n          <h2><strong>{props.children}</strong></h2>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <p>{props.subtitle}</p>\r\n        </Col>\r\n      </Row>\r\n    </Layout>\r\n  )\r\n}","import React from 'react';\r\nimport { Hero, Navigator } from '../';\r\n\r\nexport const Header = props => {\r\n  return(\r\n    <>\r\n      <Hero\r\n        currentScrollHeight={props.currentScrollHeight}\r\n        subtitle={props.subtitle}\r\n      >\r\n        {props.children}\r\n      </Hero>\r\n      <Navigator\r\n        currentScrollHeight={props.currentScrollHeight}\r\n        brand={props.brand}\r\n      />\r\n    </>\r\n  )\r\n}","import React, { Component } from 'react';\r\nimport { Blurb, Skillset, Title } from '../components';\r\n\r\nimport * as bio from '../assets/data/bio.json';\r\n\r\nclass About extends Component {\r\n  render() {\r\n    return(\r\n      <>\r\n        <Title subtitle=\"A Little Information\">About</Title>\r\n        <Blurb src={bio.headshot}>{bio.blurb}</Blurb>\r\n        <Skillset>\r\n          {bio.skills.map(\r\n            (skill, index) => (\r\n              <span>\r\n                {index !== (bio.skills.length - 1) ? `${skill}, ` : `${skill}`}\r\n              </span>\r\n            )\r\n          )}\r\n        </Skillset>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport { CardLayout, PortfolioCard, Title } from '../components';\r\n\r\nimport * as projects from '../assets/data/projects.json';\r\n\r\n\r\nclass Portfolio extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      projects: projects.entries\r\n    };\r\n    console.log(this.state);\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <>\r\n        <Title subtitle=\"Some Things I've Made\">Portfolio</Title>\r\n        <CardLayout>\r\n          {this.state.projects.map(card => (\r\n            <PortfolioCard\r\n              key={card.key}\r\n              name={card.name}\r\n              description={card.description}\r\n              techs={card.techs}\r\n              image={card.image}\r\n              repoLink={card.repoLink}\r\n              appLink={card.appLink}\r\n            />\r\n          ))}\r\n        </CardLayout>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Portfolio;","import React, { Component } from 'react';\r\nimport { Title, ContactMe } from '../components';\r\n\r\nimport * as contactMe from '../assets/data/contactme.json';\r\n\r\nclass Contact extends Component {\r\n  render() {\r\n    return(\r\n      <>\r\n        <Title subtitle=\"How to Get in Touch\">Contact</Title>\r\n        <ContactMe\r\n          email={contactMe.email}\r\n          linkedin={contactMe.linkedin}\r\n          github={contactMe.github} \r\n        />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { Layout, Title } from '../components';\r\n\r\nclass NoMatch extends Component {\r\n  render() {\r\n    return(\r\n      <Layout>\r\n        <Title subtitle=\"This is not my beautiful house\">Whoops!</Title>\r\n        <Row>\r\n          <Col>\r\n            <p className=\"lead text-success\">Page not found!</p>\r\n          </Col>\r\n        </Row>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NoMatch;","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport { Header } from './components/Header';\r\n\r\nimport About from './pages/About';\r\nimport Portfolio from './pages/Portfolio';\r\nimport Contact from './pages/Contact';\r\nimport NoMatch from './pages/NoMatch';\r\n\r\n// import logo from './logo.svg';\r\n\r\nimport * as name from './assets/data/name.json';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      currentScrollHeight: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount () {      \r\n    window.onscroll =()=>{\r\n      const newScrollHeight = Math.ceil(window.scrollY / 25) * 25;\r\n      if (this.state.currentScrollHeight !== newScrollHeight){\r\n          this.setState({currentScrollHeight: newScrollHeight});\r\n          console.log(newScrollHeight);\r\n      }\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return(\r\n      <Router basename=\"\">\r\n        <Header\r\n          currentScrollHeight={this.state.currentScrollHeight}\r\n          subtitle={name.title}\r\n          brand={name.initials}\r\n        >\r\n          {name.name}\r\n        </Header>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={ About } />\r\n          <Route path=\"/portfolio\" component={ Portfolio } />\r\n          <Route path=\"/contact\" component={ Contact } />\r\n          <Route component={ NoMatch } />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}